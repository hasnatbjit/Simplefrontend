name: Continuous Deployment (CD)

on:
  workflow_run:
    workflows: ["Continuous Integration (CI)"]
    types: [completed]
    branches:
      - main
env:
  PROJECT_ID: new-project-366703
  GAR_LOCATION: asia-south1
  BUCKET_NAME: dev.pocketalktest.ml
jobs:
  deploy:
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
        contents: 'read'
        id-token: 'write'
    # Defines the type of runner the job runs on
    runs-on: ubuntu-latest

    steps:
      - name: Checkout to the repository
        uses: actions/checkout@v2

      - name: Set up NodeJS environment
        uses: actions/setup-node@v2
        with:
          # Reads the node version from the .nvmrc file itself
          node-version-file: '.nvmrc'

      # Consider this as an add on to optimize the execution of actions
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install package dependencies
        run: npm install
      - name: Delete build file
        run: if [ -d build ]; then rm -rf build; fi

      - name: check file
        run: |-
          cat src/App.js
      - name: Install package Build
        run: npm run build

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v0'
        with:
          token_format: 'access_token'
          workload_identity_provider: projects/331230062057/locations/global/workloadIdentityPools/frontend-identity-pool/providers/frontend-identity-provider
          service_account:  frontend-build-deploy-sa@new-project-366703.iam.gserviceaccount.com
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'

      - name: 'Use gcloud CLI'
        run: 'gcloud info'

      - name: Delete files from bucket
        run: if [[ $(gsutil du gs://${BUCKET_NAME} | wc -l) -gt 0 ]]; then gsutil -m rm -rf gs://${BUCKET_NAME}/*; fi

      - name: Upload build files into bucket
        run: gsutil -m cp -r build/* gs://${BUCKET_NAME}